## Stack name: prometheus-community/kube-prometheus-stack
## Ref: https://github.com/prometheus-community/helm-charts/tree/kube-prometheus-stack-35.5.1/charts/kube-prometheus-stack
##

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  ## Prometheus StorageSpec for persistent data
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
  ##
  prometheusSpec:
    storageSpec:
      emptyDir: {}

  additionalPrometheusRulesMap:
    - name: pod-memory-utilization
      groups:
        - name: PodMemoryUtilization
          rules:
            - alert: PodMemoryUtilization
              expr: (sum(container_memory_usage_bytes{namespace!="", pod=~".*"})) / sum(container_spec_memory_limit_bytes{namespace!="", pod=~".*"}) * 100 > 70
              for: 5m
              labels:
                severity: critical
              annotations:
                summary: "Pod memory utilization is over 70%"
                description: "The memory utilization of a pod is over 70%. Pod: {{ $labels.pod }}, Namespace: {{ $labels.namespace }}"

    - name: pod-cpu-utilization
      groups:
        - name: PodCPUUtilization
          rules:
            - alert: PodCPUUtilization
              expr: (sum(rate(container_cpu_usage_seconds_total{namespace!="", pod=~".*"}[5m]))) / count(count(node_cpu_seconds_total{mode="system"}) by (instance)) * 100 > 70
              for: 5m
              labels:
                severity: critical
              annotations:
                summary: "Pod CPU utilization is over 70%"
                description: "The CPU utilization of a pod is over 70%. Pod: {{ $labels.pod }}, Namespace: {{ $labels.namespace }}"

## Configuration for Grafana
## ref: https://grafana.com/
##
## Deploy a Grafana instance
##
grafana:
  enabled: true
  adminPassword: prom-operator # Please change the default password in production !!!
  persistence:
    enabled: false

## Configuration for Alertmanager
## ref: https://prometheus.io/docs/alerting/alertmanager/
##
## Deploy an Alertmanager instance
##
alertmanager:
  enabled: true

  # Configure email alerts
  config: |-
    global:
      smtp_smarthost: 'sandbox.smtp.mailtrap.io:2525'
      smtp_from: 'alertmanager@example.com'
      smtp_auth_username: 'd06592af1f74b7'
      smtp_auth_password: '24a46ab73bc13a'

    route:
      group_by: ['alertname']
      receiver: 'email'
      repeat_interval: 1h
      group_wait: 30s

    receivers:
    - name: 'email'
      email_configs:
      - to: 'onyekachukwu@example.com'

  ## Additional alerting rules
  ##
  additionalAlertManagerConfig:
    routes:
    - receiver: 'email'
      group_wait: 30s
      group_interval: 1m
      repeat_interval: 15m
      match:
        severity: 'critical'
      routes:
      - match:
          alertname: PodMemoryUtilization
        receiver: 'email'
      - match:
          alertname: PodCPUUtilization
        receiver: 'email'

## Create default rules for monitoring the cluster
##
##
defaultRules:
  create: true
  rules:
    etcd: false
    kubeScheduler: false

## Component scraping kube scheduler
##
##
kubeScheduler:
  enabled: false

## Component scraping etcd
##
##
kubeEtcd:
  enabled: false
